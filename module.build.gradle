if (isBuildModule.toBoolean()) {
    // 作为独立App应用运行
    apply plugin : 'com.android.application'
}else {
    // 作为组件运行
    apply plugin: 'com.android.library'
}
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

//阿里路由框架配置
kapt {
    arguments {
        arg("AROUTER_MODULE_NAME", project.getName())
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    //组件依赖基础库
    api project(':module_common')
    //组件中依赖阿里路由编译框架
    kapt rootProject.ext.dependencies['arouter-compiler']
    //组件中依赖Google AAC编译框架
    kapt rootProject.ext.dependencies['lifecycle-compiler']
}

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
    }

    compileOptions {
        targetCompatibility JavaVersion.VERSION_1_7
        sourceCompatibility JavaVersion.VERSION_1_7
    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
            if (isBuildModule.toBoolean()) {
                // 独立运行
                manifest.srcFile 'src/main/alone/AndroidManifest.xml'
            }else {
                // 合并到宿主
                manifest.srcFile 'src/main/AndroidManifest.xml'
            }
            resources {
                //正式版本时，排除alone文件夹下所有调试文件
                exclude 'src/main/alone/*'
            }
        }
    }

    buildTypes {
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    dataBinding {
        enabled true
    }
}